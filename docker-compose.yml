version: '3.7'
services:
  app:
    image: app-image
    container_name: app-container
    build:
      context: ./app/
      dockerfile: Dockerfile
    ports:
      - "2024:2024"
    environment:
      DB_URL: jdbc:postgresql://dbpostgresql:5432/eshop
      DB_USER: postgres
      DB_PASS: 7nd2M487dMM7kLD4
    depends_on:
      - dbpostgresql
  client:
    image: client-image
    container_name: client-container
    build:
      context: ./client/
      dockerfile: Dockerfile
    ports:
      - "80:80"
    environment:
      DB_URL: jdbc:postgresql://dbpostgresql:5432/eshop
      DB_USER: postgres
      DB_PASS: 7nd2M487dMM7kLD4
    depends_on:
      - dbpostgresql
      
  dbpostgresql:
    image: postgres
    restart: unless-stopped
    volumes:
      - ./db:/docker-entrypoint-initdb.d
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: postgres
      POSTGRES_DB: eshop
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
volumes:
  pgdata: